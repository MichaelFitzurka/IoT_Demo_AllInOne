- name: Configure this system to run IoT Demo
  hosts: demos
  connection: local
  tasks:
      - name: Clone Smart Gateway code from github
        git: repo=https://github.com/PatrickSteiner/IoT_Demo_Gateway.git dest=./../IoT_Demo_Gateway force=yes
        tags:
         - github

      - name: Clone Smart Datacenter code from github
        git: repo=https://github.com/PatrickSteiner/IoT_Demo_Datacenter.git dest=./../IoT_Demo_Datacenter force=yes
        tags:
         - github

      - name: Clone Sensor code from github
        git: repo=https://github.com/PatrickSteiner/IoT_Demo_Sensors.git dest=./../IoT_Demo_Sensors force=yes
        tags:
         - github

      - name: Copy JBoss EAP for Datacenter images if exists
        copy: src=./../software/jboss-eap-6.4.0.zip dest=../IoT_Demo_Datacenter/bpm/Docker_Files/software/
        tags:
         - copy_applications

      - name: Copy JBoss EAP for Gateway images if exists
        copy: src=./../software/jboss-eap-6.4.0.zip dest=../IoT_Demo_Gateway/FuseEAP/Docker_Files/software/
        tags:
         - copy_applications

      - name: Copy JBoss BPM if exists
        copy: src=./../software/jboss-bpmsuite-6.2.0.GA-deployable-eap6.x.zip dest=../IoT_Demo_Datacenter/bpm/Docker_Files/software/
        tags:
         - copy_applications

      - name: Copy JBoss Fuse if exists
        copy: src=./../software/jboss-fuse-full-6.2.1.redhat-084.zip dest=../IoT_Demo_Datacenter/Fuse/Docker_Files/software/
        tags:
         - copy_applications

      - name: Copy JBoss Fuse for JBoss EAP if exists
        copy: src=./../software/fuse-eap-installer-6.2.1.redhat-084.jar dest=../IoT_Demo_Gateway/FuseEAP/Docker_Files/software/
        tags:
         - copy_applications

      - name: Copy JBoss A-MQ if exists
        copy: src=./../software/jboss-a-mq-6.2.1.redhat-084.zip dest=../IoT_Demo_Gateway/ActiveMQ/Docker_Files/software/
        tags:
         - copy_applications
      - name: Patch Datacenter Receiver for this environment
        replace: dest=./../IoT_Demo_Datacenter/receiver/src/main/resources/OSGI-INF/blueprint/blueprint.xml regexp='192.168.42.1' replace='activemq' backup=yes

      - name: Build Datacenter Receiver module
        shell: "mvn clean install >> ../../somelog.txt"
        args:
           chdir: ../IoT_Demo_Datacenter/receiver
        tags:
         - maven_builds

      - name: Build Datacenter BPM module
        shell: "mvn clean install >> ../../somelog.txt"
        args:
           chdir: ../IoT_Demo_Datacenter/bpm/LightWorkItemHandler
        tags:
         - maven_builds

      - name: Build Datacenter Rules module
        shell: "mvn clean install >> ../../somelog.txt"
        args:
           chdir: ../IoT_Demo_Datacenter/Rules
        tags:
         - maven_builds

      - name: Patch Smart_Gateway for this environment
        replace: dest=./../IoT_Demo_Gateway/Smart_Gateway/src/main/webapp/META-INF/jboss-camel-context.xml regexp='192.168.42.17' replace='receiver' backup=yes

      - name: Build Smart_Gateway module
        shell: "mvn clean install >> ../../somelog.txt"
        args:
           chdir: ../IoT_Demo_Gateway/Smart_Gateway
        tags:
         - maven_builds

      - name: Build demo producer
        shell: "mvn clean install >> ../../somelog.txt"
        args:
           chdir: ../IoT_Demo_Sensors/producer
        tags:
         - maven_builds

      - name: Patch start scripts for demo producer
        replace: dest=./../IoT_Demo_Sensors/run.sh regexp='192.168.42.1' replace='localhost' backup=yes

      - name: Patch start scripts for demo producer
        replace: dest=./../IoT_Demo_Sensors/runLight.sh regexp='192.168.42.1' replace='localhost' backup=yes

      - name: Patch start scripts for demo producer
        replace: dest=./../IoT_Demo_Sensors/runNormal.sh regexp='192.168.42.1' replace='localhost' backup=yes

      - name: Build Docker base image
        shell: "docker build --rm -t psteiner/base . >> ../../somelog.txt"
        args:
          chdir: ../IoT_Demo_Datacenter/Base
        tags:
         - docker_images

      - name: Build Docker Fuse
        shell: "docker build --rm -t psteiner/fuse . >> ../../somelog.txt"
        args:
          chdir: ../IoT_Demo_Datacenter/Fuse
        tags:
         - docker_images

      - name: Building the other  images with docker-compose
        shell: "docker-compose build >> somelog.txt"
        args:
          chdir: ./
        tags:
         - docker_images
